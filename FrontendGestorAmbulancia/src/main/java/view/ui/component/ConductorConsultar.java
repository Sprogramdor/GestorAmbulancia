
package view.ui.component;

import control.ConductorController;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dto.ConductorDTO;

/**
 *
 * @author Jesus
 */
public class ConductorConsultar extends javax.swing.JPanel {

    
    ConductorController cc= new ConductorController();
    
    
    /**
     * Creates new form ConductorConsultar
     */
    public ConductorConsultar() {
        initComponents();
        this.CargarDatos(); 
    }
    
    
    public void CargarDatos() {
    // Obtener la lista de conductores
    List<ConductorDTO> conductores;
    try {
        conductores = cc.obtenerConductores();
        System.out.println(cc.obtenerConductores().toString());
    } catch (Exception e) {
        // Mostrar mensaje de error si hay un problema al obtener los conductores
        JOptionPane.showMessageDialog(this, "Error al obtener los conductores");
        return;
    }

    // Obtener los nombres de las columnas de la tabla
    String[] columnNames = {"Cedula", "Nombre", "Apellidos", "Correo", "Fecha contrato", "Estado"};
    // Agregar más columnas según el modelo de Conductor

    // Crear el modelo de tabla con los nombres de las columnas
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);

    String estado = "No Disponible";
    // Agregar los datos a la tabla
    for (ConductorDTO conductor : conductores) {
        if (conductor.isEstado()) {
            estado = "Disponible";
        } else {
            estado = "No disponible";
        }
        Object[] rowData = {conductor.getCedula(), conductor.getNombre(), conductor.getApellidos(), conductor.getCorreo(), conductor.getFechaContrato(), estado};
        // Agregar más datos según el modelo de Conductor

        model.addRow(rowData);
    }

    // Establecer el modelo de tabla en la JTable
    this.TablaConductores.setModel(model);
}

    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaConductores = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(810, 490));

        jPanel1.setBackground(new java.awt.Color(0, 122, 204));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Consultar Conductor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLabel1)
                .addContainerGap(273, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        txtCedula.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Cedula:");

        btnConsultar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConsultarMouseClicked(evt);
            }
        });

        TablaConductores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(TablaConductores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(25, 25, 25))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConsultarMouseClicked
        
        try {
            ConductorDTO conductor= cc.consultabyCedula(this.txtCedula.getText());
             String[] columnNames = {"Cedula","Nombre","Apellidos","Correo","Fecha contrato","Estado"};
        // Agregar más columnas según el modelo de Conductor

        // Crear el modelo de tabla con los nombres de las columnas
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        
         // Agregar los datos a la tabla
           String estado="No Disponible";
           
          if(conductor != null){
               if(conductor.isEstado()){
                     estado="Disponible";
                    }
                Object[] rowData = {conductor.getCedula(),conductor.getNombre(),conductor.getApellidos(),conductor.getCorreo(),conductor.getFechaContrato(),estado};
         
               model.addRow(rowData);
        
               // Establecer el modelo de tabla en la JTable
               this.TablaConductores.setModel(model);
          }else{
              JOptionPane.showMessageDialog(this, "Conductor no Existe en el sistema");
          } 
        } catch (IOException ex) {
                        JOptionPane.showMessageDialog(this, "Conductor no Existe en el sistema");

        }
  
        
    }//GEN-LAST:event_btnConsultarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaConductores;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCedula;
    // End of variables declaration//GEN-END:variables
}
